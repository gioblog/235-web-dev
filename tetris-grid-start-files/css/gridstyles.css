/* It starts completely empty. I wish you luck. */
body {margin: 1rem;}
#wrapper{
            display: grid; 
            grid-template-areas:
            "logo" 
            "menu" 
            "intro" 
            "playground" 
            "footer"; 
}

@media (min-width: 850px){
    #wrapper {
            grid-template-columns: 550px 1fr; 
            grid-template-rows: 395px auto auto auto;
            grid-template-areas:
            "logo       intro"
            "menu       menu"
            "playground playground"
            "footer     footer"; 
        }
}

h1.game { grid-area: logo; }
ul.menu { grid-area: menu; }
#introduction { grid-area: intro; }
#tetgrid { grid-area: playground; }
footer { grid-area: footer; }

/* replacing text headers with image logos */
#logo {
  width: 500px;
  height: 345px;
  background: url(../images/tetris-logo.png) no-repeat;
  text-indent: -9999px;
}

#introduction{ margin: 2rem}

ul.menu {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-wrap: wrap;
}

.menu a {
    display: block;
    background: gray;
    padding: 10px;
    color: white;
    text-decoration: none;
    transition: transform 0.1s ease-in, background-color 0.5s linear;
}

.menu a:hover {
    transform:scale(1.1);
	background: red;
	color: yellow;
}

.menu li {
    width: 25%;
}

@media screen and (max-width: 550px) {
	.menu li {
		width: 100%;
	}
}

/* submenu css */
ul.menu ul li {
    width:100%;
}
ul.menu ul {
    display:none;
}
ul.menu li:hover ul {
    display:flex;
}

.menu .submenu li>a:hover {
    background:red;
    color:yellow;
}
.menu .submenu>a:after {
    content: "+";
    padding-left:5px;
}

/* grid tracks are not numbered, the lines between them are */
#tetgrid {
    display: grid;
    grid-template-columns: repeat(6, 100px);
    grid-template-rows: repeat(6, 100px);
}

/* organizing the tetris shapes */
    /* grid-column is the shorthand for grid-column-start & grid-column-end 
       it specifies the grid item's size & location in the layout. the first number specifies which column to start
       displaying the item & the second number specifies which column-line to stop displaying the item or how many columns to span to
    */
#o {
    grid-column: 1/3;
    grid-row: 1/span 2;
}

#i {
    grid-column: 3/-1;
    grid-row: span 1;
}

#t {
    grid-column: 3/span 1;
    grid-row: 3/span 3;
}

#t img {
    transform-origin: 0 0;
    transform: translateX(205px) rotate(90deg); 
} 

#z {
    grid-column: 2/span 2;
    grid-row: 2/span 3;
}

#z img {
    transform-origin: 0 0;
    transform: translateX(205px) rotate(90deg);
}

#l {
    grid-column: 1/span 2; 
    grid-row: 3/ span 3; 
}

#l img {
    transform-origin: 0 0; 
    transform: translateY(305px) rotate(270deg);
}

#j {
    grid-column: 4/ span 2; 
    grid-row: 2/span 2; 
}

#s {
    grid-column: 5/span 2; 
    grid-row: 4/span 3;
}

/* i couldn't get the s-block to rotate for some reason so that it would fit nicely between the t-block & j-block
   so i just opted to move it down unerneath the j-block for the sake of making none of the blocks overlap at minimum 
*/
#s img {
    transform-origin: 0 0;
    translate: rotate(90deg); 
}



/* make the tetris blocks rotate under the cursor; needs the addition of hover rule to work */

img {
    transition-property: transform;
    transition-duration: 2s;
}

img:hover {
    transform: rotate(-90deg);
}